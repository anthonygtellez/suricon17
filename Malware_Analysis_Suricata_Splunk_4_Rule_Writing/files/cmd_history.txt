$ mkdir malware_zips && cd
$ while read line; do wget "${line}"; done < ../wget_list.txt

ls > ../all_zips

### Unzip files with password
Get the password from: http://www.malware-traffic-analysis.net/about.html
$ while read line; do unzip -P <password> "${line}"; done < ../all_zips

You may need to install it using apt or use a different program capable of opening zip files.

### Create a list of all the pcaps using the find command

$ find ./ -name "*.pcap" >> ../all_pcaps
### Run Suricata in socket mode:

/usr/bin/suricata -c /etc/suricata/suricata.yaml \
 --pidfile  /var/run/suricata.pid -v --unix-socket=/var/run/666.socket -D

### Test pcap
$ /usr/bin/suricatasc /var/run/666.socket -c "pcap-file 2017-03-08-Hancitor-malspam-traffic.pcap /var/log/suricata/malware_test"

$ /usr/bin/suricatasc /var/run/666.socket -c "pcap-file /root/malware_zips/2017-03-08-Hancitor-malspam-traffic.pcap /tmp"

make a directory /root/suricata_malware

vi to edit the list, we need the fully qualified path:

%s/.\//\/root\/malware_zips\//g

### Send the list of pcaps to the socket for reading and output eve.json to a different directory:
$ while read line; do /usr/bin/suricatasc /var/run/666.socket -c "pcap-file ${line} /root/suricata_malware" ; done < ../all_pcaps


{"message": "Successfully added file to list", "return": "OK"}
{"message": "Successfully added file to list", "return": "OK"}
{"message": "Successfully added file to list", "return": "OK"}
{"message": "Successfully added file to list", "return": "OK"}
{"message": "Successfully added file to list", "return": "OK"}
{"message": "Successfully added file to list", "return": "OK"}
{"message": "Successfully added file to list", "return": "OK"}
{"message": "Successfully added file to list", "return": "OK"}
{"message": "Successfully added file to list", "return": "OK"}
{"message": "Successfully added file to list", "return": "OK"}


Traceback (most recent call last):
  File "/usr/bin/suricatasc", line 45, in <module>
    (command, arguments) = sc.parse_command(args.command)
  File "/usr/lib/python2.7/dist-packages/suricatasc/suricatasc.py", line 194, in parse_command
    arguments["tenant"] = int(tenant)
ValueError: invalid literal for int() with base 10: '/root/suricata_malware'

Traceback (most recent call last):
  File "/usr/bin/suricatasc", line 45, in <module>
    (command, arguments) = sc.parse_command(args.command)
  File "/usr/lib/python2.7/dist-packages/suricatasc/suricatasc.py", line 194, in parse_command
    arguments["tenant"] = int(tenant)
ValueError: invalid literal for int() with base 10: '/root/suricata_malware'

Check the output once complete in: /root/suricata_malware/eve.json
tail /root/suricata_malware/eve.json

root@malware-analysis:~/malware_zips# ls -lh /root/suricata_malware/
total 214M
-rw-r----- 1 root root 210M Mar 10 06:22 eve.json
-rw-r----- 1 root root 2.1M Mar 10 06:22 fast.log
-rw-r----- 1 root root 1.9M Mar 10 06:22 stats.log


Index the file using the TA-Suricata 

repeat the pcap read using splunk steam!`

$ while read line; do ./streamfwd -r ${line} ; done < /root/all_pcaps

Searching in splunk:

index=suricata or index=stream

